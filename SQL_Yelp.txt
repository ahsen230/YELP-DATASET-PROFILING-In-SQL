Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

This can be done by running the following query: Select Count(*) From [tablename]
						
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (id)
ii. Hours = 1562 (business_id)
iii. Category = 2643    (business_id)
iv. Attribute = 1115	(business_id)
v. Review = 10000	(id),	9581 (user_id), 	8090 (business_id), 
vi. Checkin = 493 	(business_id)
vii. Photo =10000	(id),		6493 (business_id)
viii. Tip =537	(user_id),      3979 (business_id) 
ix. User = 10000	(id)
x. Friend = 11	(user_id)
xi. Elite_years =  2780	(user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:
	
	
	SQL code used to arrive at answer: SELECT *                        
                                          FROM user
                                          WHERE id IS NULL OR
		                                name IS NULL OR 
		                                review_count IS NULL OR 
		                                yelping_since IS NULL OR
		                                useful IS NULL OR 
		                                funny IS NULL OR 
		                                cool IS NULL OR 
		                                fans IS NULL OR 
		                                average_stars IS NULL OR 
		                                compliment_hot IS NULL OR 
		                                compliment_more IS NULL OR 
		                                compliment_profile IS NULL OR 
		                                compliment_cute IS NULL OR 
		                                compliment_list IS NULL OR 
		                                compliment_note IS NULL OR 
		                                compliment_plain IS NULL OR 
		                                compliment_cool IS NULL OR 
		                                compliment_funny IS NULL OR 
		                                compliment_writer IS NULL OR 
		                                compliment_photos IS NULL 
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
		min: 1		max: 5		avg: 3.7082
		
	ii. Table: Business, Column: Stars
		min: 1.0	max: 5.0	avg: 3.6549
	
	iii. Table: Tip, Column: Likes
		min: 0		max: 2		avg: 0.0144
	
	iv. Table: Checkin, Column: Count
		min: 1		max: 53		avg: 1.9414
	
	v. Table: User, Column: Review_count
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:SELECT city, SUM(review_count) AS reviews
		                           FROM business
		                           GROUP BY city
		                           ORDER BY reviews DESC
	
	
	Copy and Paste the Result Below:
  city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:SELECT stars AS Rating, COUNT(stars) AS count
			          FROM business 
			          WHERE city = 'Avon'
			          GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+--------+-------+
| Rating | count |
+--------+-------+
|    1.5 |     1 |
|    2.5 |     2 |
|    3.5 |     3 |
|    4.0 |     2 |
|    4.5 |     1 |
|    5.0 |     1 |


ii. Beachwood

SQL code used to arrive at answer:SELECT stars AS Rating, COUNT(stars) AS count
			          FROM business 
			          WHERE city = 'Beachwood'
			          GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+--------+-------+
| Rating | count |
+--------+-------+
|    2.0 |     1 |
|    2.5 |     1 |
|    3.0 |     2 |
|    3.5 |     2 |
|    4.0 |     1 |
|    4.5 |     2 |
|    5.0 |     5 |
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer: SELECT name,id, review_count
from user 
Order by review_count DESC
LIMIT 3
	
		
	Copy and Paste the Result Below:
+--------+------------------------+--------------+
| name   | id                     | review_count |
+--------+------------------------+--------------+
| Gerald | -G7Zkl1wIWBBmD0KRy_sCw |         2000 |
| Sara   | -3s52C4zL_DHRK0ULG6qtg |         1629 |
| Yuri   | -8lbUNlXVSoXqaRRiHiSNg |         1339 |
+--------+------------------------+--------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	NO , By running this : SELECT name, review_count, fans
				FROM user
				ORDER BY review_count desc
Result: 
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |

It can be clearly seen that there are no relation between them. review_count can be correlated to some other feature but not fans.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
+------------+------------+
| COUNT_LOVE | COUNT_HATE |
+------------+------------+
|       1780 |        232 |

	
	SQL code used to arrive at answer:SELECT (SELECT COUNT(text)
				         FROM review
				         WHERE text LIKE "%love%") AS  COUNT_LOVE, 

			                 (SELECT COUNT(text) 
				         FROM review
				         WHERE text LIKE "%hate%") AS COUNT_HATE

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:SELECT name,fans
		                           FROM user
		                           ORDER BY fans DESC
		                           LIMIT 10
	
	
	Copy and Paste the Result Below:
		+-----------+------+
		| name      | fans |
		+-----------+------+
		| Amy       |  503 |
		| Mimi      |  497 |
		| Harald    |  311 |
		| Gerald    |  253 |
		| Christine |  173 |
		| Lisa      |  159 |
		| Cat       |  133 |
		| William   |  126 |
		| Fran      |  124 |
		| Lissa     |  120 |
		+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
YES, Restaurant with low rating has more working hours than the high rating ones.

ii. Do the two groups you chose to analyze have a different number of reviews?
  YES.       
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
NO, latitude and longitude dont provide any specific information.

SQL code used for analysis:SELECT b.city
	,c.category
	,b.stars
	,b.name
	,h.hours
	,b.review_count
	,b.longitude
	,b.latitude
	
	,CASE 
		WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 Stars' 
		WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 Stars'
		END AS "Star_rating"
FROM (
	(
		business b INNER JOIN hours h ON b.id = h.business_id
		INNER JOIN category c ON b.id = c.business_id
		)
	)
WHERE city = "Las Vegas" -- city of choice
	AND category = "Shopping" AND Star_rating is NOT NULL
GROUP BY b.stars


RESULT:
+-----------+----------+-------+--------------------------------+---------------------+--------------+-----------+----------+-------------+
| city      | category | stars | name                           | hours               | review_count | longitude | latitude | Star_rating |
+-----------+----------+-------+--------------------------------+---------------------+--------------+-----------+----------+-------------+
| Las Vegas | Shopping |   2.5 | Walgreens                      | Saturday|8:00-22:00 |            6 |  -115.091 |  36.1007 | 2-3 Stars   |
| Las Vegas | Shopping |   4.5 | Red Rock Canyon Visitor Center | Saturday|8:00-16:30 |           32 |  -115.428 |  36.1357 | 4-5 Stars   |
| Las Vegas | Shopping |   5.0 | Desert Medical Equipment       | Monday|8:00-17:00   |            4 |  -115.187 |  36.0964 | 4-5 Stars   |
+-----------+----------+-------+--------------------------------+---------------------+--------------+-----------+----------+-------------+

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:Huge difference between the total reviews. Obviously Closed ones have less reviews.
         
         
ii. Difference 2:Surprisingly, there is not much difference between their average ratings but still there is a minor one.
         
         
         
SQL code used for analysis:
Select b.is_open,
SUM(b.review_count) As Total_Reviews,

AVG(b.stars) As AVERAGE_RATING

From business b

Group by b.is_open


RESULT:
+---------+---------------+----------------+
| is_open | Total_Reviews | AVERAGE_RATING |
+---------+---------------+----------------+
|       0 |         35261 |  3.52039473684 |
|       1 |        269300 |  3.67900943396 |
+---------+---------------+----------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
 To create a Model trained on all 5 star restaurants to build a new restaurant.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The data which I have right now is not really enough for the model, I have to get the data related to the environment of these
restaurants too. And what type of services they give etc.
                           
                  
iii. Output of your finished dataset:


IT IS JUST THE OVERVIEW OF THE DATA. MANY MORE COLUMNS NEEDED TO BE ADDED

+------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| name                   | value and avg-star                                                                                                                    |
+------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
| RestaurantsDelivery    | 0----3.35119047619048                                                                                                                 |
| GoodForKids            | 1----3.45820895522388                                                                                                                 |
| AgesAllowed            | 18plus----2.0                                                                                                                         |
| RestaurantsPriceRange2 | 2----3.3030303030303                                                                                                                  |
| RestaurantsPriceRange2 | 3----3.0                                                                                                                              |
| RestaurantsPriceRange2 | 4----4.25                                                                                                                             |
| NoiseLevel             | average----3.3                                                                                                                        |
| Alcohol                | beer_and_wine----3.07142857142857                                                                                                     |
| RestaurantsAttire      | casual----3.18965517241379                                                                                                            |
| WiFi                   | free----3.08333333333333                                                                                                              |
| Alcohol                | full_bar----3.14285714285714                                                                                                          |
| WiFi                   | no----3.53571428571429                                                                                                                |
| Alcohol                | none----3.44444444444444                                                                                                              |
| Smoking                | outdoor----3.41666666666667                                                                                                           |
| WiFi                   | paid----3.5                                                                                                                           |
| NoiseLevel             | quiet----2.875                                                                                                                        |
| NoiseLevel             | very_loud----3.0                                                                                                                      |
| GoodForMeal            | {"dessert": false, "latenight": false, "lunch": false, "dinner": false, "breakfast": false, "brunch": false}----3.09090909090909      |
| GoodForMeal            | {"dessert": false, "latenight": false, "lunch": false, "dinner": true, "breakfast": false, "brunch": false}----3.5                    |
| GoodForMeal            | {"dessert": false, "latenight": false, "lunch": true, "dinner": false, "breakfast": false, "brunch": false}----3.375                  |
| GoodForMeal            | {"dessert": false, "latenight": false, "lunch": true, "dinner": true, "breakfast": false, "brunch": false}----3.44444444444444        |
| GoodForMeal            | {"dessert": false, "latenight": false, "lunch": true, "dinner": true, "breakfast": true, "brunch": false}----3.5                      |
| GoodForMeal            | {"dessert": false, "latenight": true, "lunch": false, "dinner": false, "breakfast": false, "brunch": false}----2.5                    |
| Music                  | {"dj": false, "background_music": false, "no_music": false, "karaoke": false, "live": false, "video": false, "jukebox": false}----3.5 |
| Music                  | {"dj": false, "background_music": false, "no_music": false, "karaoke": false, "live": true, "video": false, "jukebox": false}----4.0  |
+------------------------+---------------------------------------------------------------------------------------------------------------------------------------+
(Output limit exceeded, 25 of 46 total rows shown)
         
         
iv. Provide the SQL code you used to create your final dataset:
SELECT a.name
	,(a.value || "----" || AVG(b.stars)) AS "value and avg-star",
	
FROM attribute a
INNER JOIN business b ON a.business_id = b.id
GROUP BY a.value






